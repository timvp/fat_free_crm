id = dom_id(@training_target)

if params[:cancel].true?     # <----------------- Hide [Edit TrainingTarget]

  page << "for (var i in CKEDITOR.instances) {                       
            (function(i){             
                CKEDITOR.instances[i].destroy();                    
            })(i);                                                  
           };"   

  if called_from_landing_page?
    page.call "crm.flip_form", :edit_training_target
    page.call "crm.set_title", :edit_training_target, h(@training_target.name)
  else                                            # Called from training_targets list item...
    page[id].replace :partial => "training_target", :collection => [ @training_target ]
  end


else # <----------------------------------------  Show [Edit TrainingTarget] form.

  if params[:cancel].blank?                       # Called from training_targets list item...
    if @previous                                  # Hide open [Edit TrainingTarget] form if any.
      if @previous.is_a?(TrainingTarget)
        page[dom_id(@previous)].replace :partial => "training_target", :collection => [ @previous ]
      else
        page.call "crm.flick", "training_target_#{@previous}", :remove
      end
    end
    page.call "crm.highlight_off", id             # Disable onMouseOver for the list item.
    page.call "crm.hide_form", :create_training_target    # Hide [Create TrainingTarget] form if any.
    page[id].replace_html :partial => "edit"      # Show [Edit TrainingTarget] form.

  elsif params[:cancel].false?                    # Called from title of the training_target landing page...
    page[:edit_training_target].replace_html :partial => "edit"
    page.call "crm.flip_form", :edit_training_target
    page.call "crm.set_title", :edit_training_target, "#{t :edit} #{h(@training_target.name)}"
  end

  page[:training_target_name].focus

  hook(:edit_training_target_rjs, self, :page => page)
end
