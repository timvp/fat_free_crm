- gravatar_size = @current_user.preference[:contacts_outline] == "brief" ? "16x16" : "30x30"

- contact = trainer

%li.highlight[trainer]
  = avatar_for(contact, :size => "30x30")
  
  %ul.tools
    = hook(:contact_tools_before, self, :contact => contact)

    - if can?(:update, contact)
      %li= link_to_edit(contact)
    
    
    -# TODO EFFICT if shown_on_landing_page?
      %li= link_to_discard_trainer(contact)

    -# if can?(:destroy, contact)
      %li= link_to_delete(contact)

  .indentslim
    = link_to_if can?(:read, contact), contact.full_name(@current_user.preference[:contacts_naming]), contact
    -#= link_to(h(contact.full_name(@current_user.preference[:contacts_naming])), contact)
    -# if contact.contact_type?
      = " - " + t(contact.contact_type).join('/')
    %tt
      - if contact.title? && contact.department?
        = h(contact.title) << ", " << h(contact.department)
      - else
        = h(contact.title) if contact.title?
      - if contact.account && contact.account.name?
        - if can?(:read, contact.account)
          == #{t :at} #{link_to h(contact.account.name), account_path(contact.account)}
        - else
          == #{t :at} #{h(contact.account.name)}
      - if contact.lead and contact.lead.referred_by?
        &ndash;
        = #{t :referred_by_small} #{contact.lead.referred_by}"
    - unless @current_user.preference[:contacts_outline] == "brief"
      %dt{ :style => "padding: 2px 0px 0px 0px" }
        = link_to_email(contact.email) << " | " if contact.email.present?
        = "#{t :phone_small}: <b>".html_safe + h(contact.phone) << "</b> | ".html_safe if contact.phone.present?
        = "#{t :mobile_small}: <b>".html_safe + h(contact.mobile) << "</b> | ".html_safe if contact.mobile.present?
        -#= t(:added_ago, time_ago_in_words(contact.created_at))
      - if contact.tag_list.present?
        %dt
          .tags= tags_for_index(contact)

      = hook(:contact_bottom, self, :contact => contact)